# Tên của workflow, hiển thị trên tab Actions của GitHub
name: Churn Prediction CI

# Định nghĩa các sự kiện sẽ kích hoạt workflow này
on:
  push:
    # --- SỬA Ở ĐÂY ---
    branches: [ master ] # Chạy khi đẩy lên nhánh master
    # --- KẾT THÚC SỬA ---
  pull_request:
    # --- SỬA Ở ĐÂY ---
    branches: [ master ] # Chạy khi có pull request vào nhánh master
    # --- KẾT THÚC SỬA ---
  workflow_dispatch: # Cho phép chạy thủ công từ giao diện GitHub Actions

# Định nghĩa các công việc (jobs) sẽ chạy trong workflow
jobs:
  build-and-test: # Tên của job (bạn có thể đặt tên khác)
    runs-on: ubuntu-latest # Chạy trên máy ảo Ubuntu mới nhất do GitHub cung cấp

    steps:
    # Bước 1: Checkout code từ repository về máy ảo runner
    - name: Checkout repository
      uses: actions/checkout@v4 # Sử dụng action dựng sẵn của GitHub

    # Bước 2: Thiết lập môi trường Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # <<< QUAN TRỌNG: Đổi thành phiên bản Python bạn dùng trong venv
        cache: 'pip' # Bật cache cho pip để tăng tốc cài đặt thư viện

    # Bước 3: Cài đặt các thư viện phụ thuộc
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest # Cài đặt flake8 để lint và pytest để test
        pip install -r requirements.txt # Cài đặt các thư viện của dự án

    # Bước 4: Lint code với flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,.venv,__pycache__

    # Bước 5: Chạy Unit Tests với pytest (Cần bạn viết test sau này)
    - name: Run tests with pytest
      run: |
        pytest

    # Bước 6: Thiết lập Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Bước 7: Build Docker image cho API
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: churn-prediction-api-ci:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

